// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoTask.proto
// Protobuf C++ Version: 4.25.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_ProtoTask_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ProtoTask_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ProtoTask_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ProtoTask_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ProtoTask_2eproto;
class EchoReq;
struct EchoReqDefaultTypeInternal;
extern EchoReqDefaultTypeInternal _EchoReq_default_instance_;
class IntIntProto;
struct IntIntProtoDefaultTypeInternal;
extern IntIntProtoDefaultTypeInternal _IntIntProto_default_instance_;
class ItemProto;
struct ItemProtoDefaultTypeInternal;
extern ItemProtoDefaultTypeInternal _ItemProto_default_instance_;
class LoginRequest;
struct LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class LoginResponse;
struct LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
class LogoutRequest;
struct LogoutRequestDefaultTypeInternal;
extern LogoutRequestDefaultTypeInternal _LogoutRequest_default_instance_;
class LogoutResponse;
struct LogoutResponseDefaultTypeInternal;
extern LogoutResponseDefaultTypeInternal _LogoutResponse_default_instance_;
class PerformanceTestReq;
struct PerformanceTestReqDefaultTypeInternal;
extern PerformanceTestReqDefaultTypeInternal _PerformanceTestReq_default_instance_;
class PerformanceTestRes;
struct PerformanceTestResDefaultTypeInternal;
extern PerformanceTestResDefaultTypeInternal _PerformanceTestRes_default_instance_;
class Role;
struct RoleDefaultTypeInternal;
extern RoleDefaultTypeInternal _Role_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class Role final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Role) */ {
 public:
  inline Role() : Role(nullptr) {}
  ~Role() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Role(::google::protobuf::internal::ConstantInitialized);

  inline Role(const Role& from)
      : Role(nullptr, from) {}
  Role(Role&& from) noexcept
    : Role() {
    *this = ::std::move(from);
  }

  inline Role& operator=(const Role& from) {
    CopyFrom(from);
    return *this;
  }
  inline Role& operator=(Role&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Role& default_instance() {
    return *internal_default_instance();
  }
  static inline const Role* internal_default_instance() {
    return reinterpret_cast<const Role*>(
               &_Role_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Role& a, Role& b) {
    a.Swap(&b);
  }
  inline void Swap(Role* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Role* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Role* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Role>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Role& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Role& from) {
    Role::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Role* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Role";
  }
  protected:
  explicit Role(::google::protobuf::Arena* arena);
  Role(::google::protobuf::Arena* arena, const Role& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Role)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      17, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoTask_2eproto;
};// -------------------------------------------------------------------

class PerformanceTestRes final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PerformanceTestRes) */ {
 public:
  inline PerformanceTestRes() : PerformanceTestRes(nullptr) {}
  ~PerformanceTestRes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PerformanceTestRes(::google::protobuf::internal::ConstantInitialized);

  inline PerformanceTestRes(const PerformanceTestRes& from)
      : PerformanceTestRes(nullptr, from) {}
  PerformanceTestRes(PerformanceTestRes&& from) noexcept
    : PerformanceTestRes() {
    *this = ::std::move(from);
  }

  inline PerformanceTestRes& operator=(const PerformanceTestRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline PerformanceTestRes& operator=(PerformanceTestRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PerformanceTestRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const PerformanceTestRes* internal_default_instance() {
    return reinterpret_cast<const PerformanceTestRes*>(
               &_PerformanceTestRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(PerformanceTestRes& a, PerformanceTestRes& b) {
    a.Swap(&b);
  }
  inline void Swap(PerformanceTestRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PerformanceTestRes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PerformanceTestRes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PerformanceTestRes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PerformanceTestRes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PerformanceTestRes& from) {
    PerformanceTestRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PerformanceTestRes* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "PerformanceTestRes";
  }
  protected:
  explicit PerformanceTestRes(::google::protobuf::Arena* arena);
  PerformanceTestRes(::google::protobuf::Arena* arena, const PerformanceTestRes& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResBodyFieldNumber = 2,
    kSomeIdFieldNumber = 1,
    kSomeIdAddFieldNumber = 3,
  };
  // string resBody = 2;
  void clear_resbody() ;
  const std::string& resbody() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resbody(Arg_&& arg, Args_... args);
  std::string* mutable_resbody();
  PROTOBUF_NODISCARD std::string* release_resbody();
  void set_allocated_resbody(std::string* value);

  private:
  const std::string& _internal_resbody() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resbody(
      const std::string& value);
  std::string* _internal_mutable_resbody();

  public:
  // int64 someId = 1;
  void clear_someid() ;
  ::int64_t someid() const;
  void set_someid(::int64_t value);

  private:
  ::int64_t _internal_someid() const;
  void _internal_set_someid(::int64_t value);

  public:
  // int64 someIdAdd = 3;
  void clear_someidadd() ;
  ::int64_t someidadd() const;
  void set_someidadd(::int64_t value);

  private:
  ::int64_t _internal_someidadd() const;
  void _internal_set_someidadd(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:PerformanceTestRes)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      34, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr resbody_;
    ::int64_t someid_;
    ::int64_t someidadd_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoTask_2eproto;
};// -------------------------------------------------------------------

class PerformanceTestReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PerformanceTestReq) */ {
 public:
  inline PerformanceTestReq() : PerformanceTestReq(nullptr) {}
  ~PerformanceTestReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PerformanceTestReq(::google::protobuf::internal::ConstantInitialized);

  inline PerformanceTestReq(const PerformanceTestReq& from)
      : PerformanceTestReq(nullptr, from) {}
  PerformanceTestReq(PerformanceTestReq&& from) noexcept
    : PerformanceTestReq() {
    *this = ::std::move(from);
  }

  inline PerformanceTestReq& operator=(const PerformanceTestReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline PerformanceTestReq& operator=(PerformanceTestReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PerformanceTestReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const PerformanceTestReq* internal_default_instance() {
    return reinterpret_cast<const PerformanceTestReq*>(
               &_PerformanceTestReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PerformanceTestReq& a, PerformanceTestReq& b) {
    a.Swap(&b);
  }
  inline void Swap(PerformanceTestReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PerformanceTestReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PerformanceTestReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PerformanceTestReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PerformanceTestReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PerformanceTestReq& from) {
    PerformanceTestReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PerformanceTestReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "PerformanceTestReq";
  }
  protected:
  explicit PerformanceTestReq(::google::protobuf::Arena* arena);
  PerformanceTestReq(::google::protobuf::Arena* arena, const PerformanceTestReq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSomeBodyFieldNumber = 2,
    kSomeIdFieldNumber = 1,
  };
  // string someBody = 2;
  void clear_somebody() ;
  const std::string& somebody() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_somebody(Arg_&& arg, Args_... args);
  std::string* mutable_somebody();
  PROTOBUF_NODISCARD std::string* release_somebody();
  void set_allocated_somebody(std::string* value);

  private:
  const std::string& _internal_somebody() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_somebody(
      const std::string& value);
  std::string* _internal_mutable_somebody();

  public:
  // int64 someId = 1;
  void clear_someid() ;
  ::int64_t someid() const;
  void set_someid(::int64_t value);

  private:
  ::int64_t _internal_someid() const;
  void _internal_set_someid(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:PerformanceTestReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      35, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr somebody_;
    ::int64_t someid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoTask_2eproto;
};// -------------------------------------------------------------------

class LogoutResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LogoutResponse) */ {
 public:
  inline LogoutResponse() : LogoutResponse(nullptr) {}
  ~LogoutResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LogoutResponse(::google::protobuf::internal::ConstantInitialized);

  inline LogoutResponse(const LogoutResponse& from)
      : LogoutResponse(nullptr, from) {}
  LogoutResponse(LogoutResponse&& from) noexcept
    : LogoutResponse() {
    *this = ::std::move(from);
  }

  inline LogoutResponse& operator=(const LogoutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogoutResponse& operator=(LogoutResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogoutResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LogoutResponse* internal_default_instance() {
    return reinterpret_cast<const LogoutResponse*>(
               &_LogoutResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(LogoutResponse& a, LogoutResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LogoutResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogoutResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogoutResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LogoutResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogoutResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LogoutResponse& from) {
    LogoutResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LogoutResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "LogoutResponse";
  }
  protected:
  explicit LogoutResponse(::google::protobuf::Arena* arena);
  LogoutResponse(::google::protobuf::Arena* arena, const LogoutResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 1,
  };
  // int32 errorCode = 1;
  void clear_errorcode() ;
  ::int32_t errorcode() const;
  void set_errorcode(::int32_t value);

  private:
  ::int32_t _internal_errorcode() const;
  void _internal_set_errorcode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:LogoutResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t errorcode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoTask_2eproto;
};// -------------------------------------------------------------------

class LogoutRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LogoutRequest) */ {
 public:
  inline LogoutRequest() : LogoutRequest(nullptr) {}
  ~LogoutRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LogoutRequest(::google::protobuf::internal::ConstantInitialized);

  inline LogoutRequest(const LogoutRequest& from)
      : LogoutRequest(nullptr, from) {}
  LogoutRequest(LogoutRequest&& from) noexcept
    : LogoutRequest() {
    *this = ::std::move(from);
  }

  inline LogoutRequest& operator=(const LogoutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogoutRequest& operator=(LogoutRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogoutRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LogoutRequest* internal_default_instance() {
    return reinterpret_cast<const LogoutRequest*>(
               &_LogoutRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(LogoutRequest& a, LogoutRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LogoutRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogoutRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogoutRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LogoutRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogoutRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LogoutRequest& from) {
    LogoutRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LogoutRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "LogoutRequest";
  }
  protected:
  explicit LogoutRequest(::google::protobuf::Arena* arena);
  LogoutRequest(::google::protobuf::Arena* arena, const LogoutRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSessionIdFieldNumber = 1,
  };
  // int64 sessionId = 1;
  void clear_sessionid() ;
  ::int64_t sessionid() const;
  void set_sessionid(::int64_t value);

  private:
  ::int64_t _internal_sessionid() const;
  void _internal_set_sessionid(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:LogoutRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t sessionid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoTask_2eproto;
};// -------------------------------------------------------------------

class LoginResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginResponse) */ {
 public:
  inline LoginResponse() : LoginResponse(nullptr) {}
  ~LoginResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LoginResponse(::google::protobuf::internal::ConstantInitialized);

  inline LoginResponse(const LoginResponse& from)
      : LoginResponse(nullptr, from) {}
  LoginResponse(LoginResponse&& from) noexcept
    : LoginResponse() {
    *this = ::std::move(from);
  }

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginResponse& operator=(LoginResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginResponse* internal_default_instance() {
    return reinterpret_cast<const LoginResponse*>(
               &_LoginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(LoginResponse& a, LoginResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LoginResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoginResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LoginResponse& from) {
    LoginResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LoginResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "LoginResponse";
  }
  protected:
  explicit LoginResponse(::google::protobuf::Arena* arena);
  LoginResponse(::google::protobuf::Arena* arena, const LoginResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerTimeFieldNumber = 2,
    kRoleIdFieldNumber = 3,
    kErrorCodeFieldNumber = 1,
  };
  // int64 serverTime = 2;
  void clear_servertime() ;
  ::int64_t servertime() const;
  void set_servertime(::int64_t value);

  private:
  ::int64_t _internal_servertime() const;
  void _internal_set_servertime(::int64_t value);

  public:
  // int64 roleId = 3;
  void clear_roleid() ;
  ::int64_t roleid() const;
  void set_roleid(::int64_t value);

  private:
  ::int64_t _internal_roleid() const;
  void _internal_set_roleid(::int64_t value);

  public:
  // int32 errorCode = 1;
  void clear_errorcode() ;
  ::int32_t errorcode() const;
  void set_errorcode(::int32_t value);

  private:
  ::int32_t _internal_errorcode() const;
  void _internal_set_errorcode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:LoginResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t servertime_;
    ::int64_t roleid_;
    ::int32_t errorcode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoTask_2eproto;
};// -------------------------------------------------------------------

class LoginRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginRequest) */ {
 public:
  inline LoginRequest() : LoginRequest(nullptr) {}
  ~LoginRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LoginRequest(::google::protobuf::internal::ConstantInitialized);

  inline LoginRequest(const LoginRequest& from)
      : LoginRequest(nullptr, from) {}
  LoginRequest(LoginRequest&& from) noexcept
    : LoginRequest() {
    *this = ::std::move(from);
  }

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginRequest& operator=(LoginRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
               &_LoginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(LoginRequest& a, LoginRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LoginRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoginRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LoginRequest& from) {
    LoginRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LoginRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "LoginRequest";
  }
  protected:
  explicit LoginRequest(::google::protobuf::Arena* arena);
  LoginRequest(::google::protobuf::Arena* arena, const LoginRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLoginTokenFieldNumber = 3,
    kAccountIdFieldNumber = 1,
    kRoleIdFieldNumber = 2,
    kGameTicketFieldNumber = 4,
    kServerIdFieldNumber = 5,
  };
  // string loginToken = 3;
  void clear_logintoken() ;
  const std::string& logintoken() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_logintoken(Arg_&& arg, Args_... args);
  std::string* mutable_logintoken();
  PROTOBUF_NODISCARD std::string* release_logintoken();
  void set_allocated_logintoken(std::string* value);

  private:
  const std::string& _internal_logintoken() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_logintoken(
      const std::string& value);
  std::string* _internal_mutable_logintoken();

  public:
  // int64 accountId = 1;
  void clear_accountid() ;
  ::int64_t accountid() const;
  void set_accountid(::int64_t value);

  private:
  ::int64_t _internal_accountid() const;
  void _internal_set_accountid(::int64_t value);

  public:
  // int64 roleId = 2;
  void clear_roleid() ;
  ::int64_t roleid() const;
  void set_roleid(::int64_t value);

  private:
  ::int64_t _internal_roleid() const;
  void _internal_set_roleid(::int64_t value);

  public:
  // int32 gameTicket = 4;
  void clear_gameticket() ;
  ::int32_t gameticket() const;
  void set_gameticket(::int32_t value);

  private:
  ::int32_t _internal_gameticket() const;
  void _internal_set_gameticket(::int32_t value);

  public:
  // int32 serverId = 5;
  void clear_serverid() ;
  ::int32_t serverid() const;
  void set_serverid(::int32_t value);

  private:
  ::int32_t _internal_serverid() const;
  void _internal_set_serverid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:LoginRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      31, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr logintoken_;
    ::int64_t accountid_;
    ::int64_t roleid_;
    ::int32_t gameticket_;
    ::int32_t serverid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoTask_2eproto;
};// -------------------------------------------------------------------

class ItemProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ItemProto) */ {
 public:
  inline ItemProto() : ItemProto(nullptr) {}
  ~ItemProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ItemProto(::google::protobuf::internal::ConstantInitialized);

  inline ItemProto(const ItemProto& from)
      : ItemProto(nullptr, from) {}
  ItemProto(ItemProto&& from) noexcept
    : ItemProto() {
    *this = ::std::move(from);
  }

  inline ItemProto& operator=(const ItemProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ItemProto& operator=(ItemProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ItemProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const ItemProto* internal_default_instance() {
    return reinterpret_cast<const ItemProto*>(
               &_ItemProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ItemProto& a, ItemProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ItemProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ItemProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ItemProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ItemProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ItemProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ItemProto& from) {
    ItemProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ItemProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ItemProto";
  }
  protected:
  explicit ItemProto(::google::protobuf::Arena* arena);
  ItemProto(::google::protobuf::Arena* arena, const ItemProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // int32 itemId = 1;
  void clear_itemid() ;
  ::int32_t itemid() const;
  void set_itemid(::int32_t value);

  private:
  ::int32_t _internal_itemid() const;
  void _internal_set_itemid(::int32_t value);

  public:
  // int32 count = 2;
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ItemProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t itemid_;
    ::int32_t count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoTask_2eproto;
};// -------------------------------------------------------------------

class IntIntProto final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IntIntProto) */ {
 public:
  inline IntIntProto() : IntIntProto(nullptr) {}
  ~IntIntProto() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IntIntProto(::google::protobuf::internal::ConstantInitialized);

  inline IntIntProto(const IntIntProto& from)
      : IntIntProto(nullptr, from) {}
  IntIntProto(IntIntProto&& from) noexcept
    : IntIntProto() {
    *this = ::std::move(from);
  }

  inline IntIntProto& operator=(const IntIntProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntIntProto& operator=(IntIntProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IntIntProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const IntIntProto* internal_default_instance() {
    return reinterpret_cast<const IntIntProto*>(
               &_IntIntProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IntIntProto& a, IntIntProto& b) {
    a.Swap(&b);
  }
  inline void Swap(IntIntProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IntIntProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IntIntProto* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IntIntProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IntIntProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IntIntProto& from) {
    IntIntProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IntIntProto* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IntIntProto";
  }
  protected:
  explicit IntIntProto(::google::protobuf::Arena* arena);
  IntIntProto(::google::protobuf::Arena* arena, const IntIntProto& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIntValue1FieldNumber = 1,
    kIntValue2FieldNumber = 2,
  };
  // int32 intValue1 = 1;
  void clear_intvalue1() ;
  ::int32_t intvalue1() const;
  void set_intvalue1(::int32_t value);

  private:
  ::int32_t _internal_intvalue1() const;
  void _internal_set_intvalue1(::int32_t value);

  public:
  // int32 intValue2 = 2;
  void clear_intvalue2() ;
  ::int32_t intvalue2() const;
  void set_intvalue2(::int32_t value);

  private:
  ::int32_t _internal_intvalue2() const;
  void _internal_set_intvalue2(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IntIntProto)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t intvalue1_;
    ::int32_t intvalue2_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoTask_2eproto;
};// -------------------------------------------------------------------

class EchoReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EchoReq) */ {
 public:
  inline EchoReq() : EchoReq(nullptr) {}
  ~EchoReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EchoReq(::google::protobuf::internal::ConstantInitialized);

  inline EchoReq(const EchoReq& from)
      : EchoReq(nullptr, from) {}
  EchoReq(EchoReq&& from) noexcept
    : EchoReq() {
    *this = ::std::move(from);
  }

  inline EchoReq& operator=(const EchoReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline EchoReq& operator=(EchoReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EchoReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const EchoReq* internal_default_instance() {
    return reinterpret_cast<const EchoReq*>(
               &_EchoReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(EchoReq& a, EchoReq& b) {
    a.Swap(&b);
  }
  inline void Swap(EchoReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EchoReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EchoReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EchoReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EchoReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EchoReq& from) {
    EchoReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EchoReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "EchoReq";
  }
  protected:
  explicit EchoReq(::google::protobuf::Arena* arena);
  EchoReq(::google::protobuf::Arena* arena, const EchoReq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestBodyFieldNumber = 1,
    kSomeIdFieldNumber = 2,
  };
  // string requestBody = 1;
  void clear_requestbody() ;
  const std::string& requestbody() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_requestbody(Arg_&& arg, Args_... args);
  std::string* mutable_requestbody();
  PROTOBUF_NODISCARD std::string* release_requestbody();
  void set_allocated_requestbody(std::string* value);

  private:
  const std::string& _internal_requestbody() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_requestbody(
      const std::string& value);
  std::string* _internal_mutable_requestbody();

  public:
  // int64 someId = 2;
  void clear_someid() ;
  ::int64_t someid() const;
  void set_someid(::int64_t value);

  private:
  ::int64_t _internal_someid() const;
  void _internal_set_someid(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:EchoReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      27, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr requestbody_;
    ::int64_t someid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtoTask_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// IntIntProto

// int32 intValue1 = 1;
inline void IntIntProto::clear_intvalue1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.intvalue1_ = 0;
}
inline ::int32_t IntIntProto::intvalue1() const {
  // @@protoc_insertion_point(field_get:IntIntProto.intValue1)
  return _internal_intvalue1();
}
inline void IntIntProto::set_intvalue1(::int32_t value) {
  _internal_set_intvalue1(value);
  // @@protoc_insertion_point(field_set:IntIntProto.intValue1)
}
inline ::int32_t IntIntProto::_internal_intvalue1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.intvalue1_;
}
inline void IntIntProto::_internal_set_intvalue1(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.intvalue1_ = value;
}

// int32 intValue2 = 2;
inline void IntIntProto::clear_intvalue2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.intvalue2_ = 0;
}
inline ::int32_t IntIntProto::intvalue2() const {
  // @@protoc_insertion_point(field_get:IntIntProto.intValue2)
  return _internal_intvalue2();
}
inline void IntIntProto::set_intvalue2(::int32_t value) {
  _internal_set_intvalue2(value);
  // @@protoc_insertion_point(field_set:IntIntProto.intValue2)
}
inline ::int32_t IntIntProto::_internal_intvalue2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.intvalue2_;
}
inline void IntIntProto::_internal_set_intvalue2(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.intvalue2_ = value;
}

// -------------------------------------------------------------------

// Role

// int64 id = 1;
inline void Role::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Role::id() const {
  // @@protoc_insertion_point(field_get:Role.id)
  return _internal_id();
}
inline void Role::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Role.id)
}
inline ::int64_t Role::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void Role::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string name = 2;
inline void Role::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Role::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Role.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Role::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Role.name)
}
inline std::string* Role::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Role.name)
  return _s;
}
inline const std::string& Role::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Role::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Role::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Role::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Role.name)
  return _impl_.name_.Release();
}
inline void Role::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Role.name)
}

// -------------------------------------------------------------------

// ItemProto

// int32 itemId = 1;
inline void ItemProto::clear_itemid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.itemid_ = 0;
}
inline ::int32_t ItemProto::itemid() const {
  // @@protoc_insertion_point(field_get:ItemProto.itemId)
  return _internal_itemid();
}
inline void ItemProto::set_itemid(::int32_t value) {
  _internal_set_itemid(value);
  // @@protoc_insertion_point(field_set:ItemProto.itemId)
}
inline ::int32_t ItemProto::_internal_itemid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.itemid_;
}
inline void ItemProto::_internal_set_itemid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.itemid_ = value;
}

// int32 count = 2;
inline void ItemProto::clear_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.count_ = 0;
}
inline ::int32_t ItemProto::count() const {
  // @@protoc_insertion_point(field_get:ItemProto.count)
  return _internal_count();
}
inline void ItemProto::set_count(::int32_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:ItemProto.count)
}
inline ::int32_t ItemProto::_internal_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.count_;
}
inline void ItemProto::_internal_set_count(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// LoginRequest

// int64 accountId = 1;
inline void LoginRequest::clear_accountid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.accountid_ = ::int64_t{0};
}
inline ::int64_t LoginRequest::accountid() const {
  // @@protoc_insertion_point(field_get:LoginRequest.accountId)
  return _internal_accountid();
}
inline void LoginRequest::set_accountid(::int64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:LoginRequest.accountId)
}
inline ::int64_t LoginRequest::_internal_accountid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.accountid_;
}
inline void LoginRequest::_internal_set_accountid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.accountid_ = value;
}

// int64 roleId = 2;
inline void LoginRequest::clear_roleid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.roleid_ = ::int64_t{0};
}
inline ::int64_t LoginRequest::roleid() const {
  // @@protoc_insertion_point(field_get:LoginRequest.roleId)
  return _internal_roleid();
}
inline void LoginRequest::set_roleid(::int64_t value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:LoginRequest.roleId)
}
inline ::int64_t LoginRequest::_internal_roleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.roleid_;
}
inline void LoginRequest::_internal_set_roleid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.roleid_ = value;
}

// string loginToken = 3;
inline void LoginRequest::clear_logintoken() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.logintoken_.ClearToEmpty();
}
inline const std::string& LoginRequest::logintoken() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:LoginRequest.loginToken)
  return _internal_logintoken();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginRequest::set_logintoken(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.logintoken_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:LoginRequest.loginToken)
}
inline std::string* LoginRequest::mutable_logintoken() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_logintoken();
  // @@protoc_insertion_point(field_mutable:LoginRequest.loginToken)
  return _s;
}
inline const std::string& LoginRequest::_internal_logintoken() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.logintoken_.Get();
}
inline void LoginRequest::_internal_set_logintoken(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.logintoken_.Set(value, GetArena());
}
inline std::string* LoginRequest::_internal_mutable_logintoken() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.logintoken_.Mutable( GetArena());
}
inline std::string* LoginRequest::release_logintoken() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:LoginRequest.loginToken)
  return _impl_.logintoken_.Release();
}
inline void LoginRequest::set_allocated_logintoken(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.logintoken_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.logintoken_.IsDefault()) {
          _impl_.logintoken_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:LoginRequest.loginToken)
}

// int32 gameTicket = 4;
inline void LoginRequest::clear_gameticket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gameticket_ = 0;
}
inline ::int32_t LoginRequest::gameticket() const {
  // @@protoc_insertion_point(field_get:LoginRequest.gameTicket)
  return _internal_gameticket();
}
inline void LoginRequest::set_gameticket(::int32_t value) {
  _internal_set_gameticket(value);
  // @@protoc_insertion_point(field_set:LoginRequest.gameTicket)
}
inline ::int32_t LoginRequest::_internal_gameticket() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gameticket_;
}
inline void LoginRequest::_internal_set_gameticket(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gameticket_ = value;
}

// int32 serverId = 5;
inline void LoginRequest::clear_serverid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.serverid_ = 0;
}
inline ::int32_t LoginRequest::serverid() const {
  // @@protoc_insertion_point(field_get:LoginRequest.serverId)
  return _internal_serverid();
}
inline void LoginRequest::set_serverid(::int32_t value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:LoginRequest.serverId)
}
inline ::int32_t LoginRequest::_internal_serverid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.serverid_;
}
inline void LoginRequest::_internal_set_serverid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.serverid_ = value;
}

// -------------------------------------------------------------------

// LoginResponse

// int32 errorCode = 1;
inline void LoginResponse::clear_errorcode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.errorcode_ = 0;
}
inline ::int32_t LoginResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:LoginResponse.errorCode)
  return _internal_errorcode();
}
inline void LoginResponse::set_errorcode(::int32_t value) {
  _internal_set_errorcode(value);
  // @@protoc_insertion_point(field_set:LoginResponse.errorCode)
}
inline ::int32_t LoginResponse::_internal_errorcode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.errorcode_;
}
inline void LoginResponse::_internal_set_errorcode(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.errorcode_ = value;
}

// int64 serverTime = 2;
inline void LoginResponse::clear_servertime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.servertime_ = ::int64_t{0};
}
inline ::int64_t LoginResponse::servertime() const {
  // @@protoc_insertion_point(field_get:LoginResponse.serverTime)
  return _internal_servertime();
}
inline void LoginResponse::set_servertime(::int64_t value) {
  _internal_set_servertime(value);
  // @@protoc_insertion_point(field_set:LoginResponse.serverTime)
}
inline ::int64_t LoginResponse::_internal_servertime() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.servertime_;
}
inline void LoginResponse::_internal_set_servertime(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.servertime_ = value;
}

// int64 roleId = 3;
inline void LoginResponse::clear_roleid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.roleid_ = ::int64_t{0};
}
inline ::int64_t LoginResponse::roleid() const {
  // @@protoc_insertion_point(field_get:LoginResponse.roleId)
  return _internal_roleid();
}
inline void LoginResponse::set_roleid(::int64_t value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:LoginResponse.roleId)
}
inline ::int64_t LoginResponse::_internal_roleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.roleid_;
}
inline void LoginResponse::_internal_set_roleid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.roleid_ = value;
}

// -------------------------------------------------------------------

// LogoutRequest

// int64 sessionId = 1;
inline void LogoutRequest::clear_sessionid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sessionid_ = ::int64_t{0};
}
inline ::int64_t LogoutRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:LogoutRequest.sessionId)
  return _internal_sessionid();
}
inline void LogoutRequest::set_sessionid(::int64_t value) {
  _internal_set_sessionid(value);
  // @@protoc_insertion_point(field_set:LogoutRequest.sessionId)
}
inline ::int64_t LogoutRequest::_internal_sessionid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sessionid_;
}
inline void LogoutRequest::_internal_set_sessionid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sessionid_ = value;
}

// -------------------------------------------------------------------

// LogoutResponse

// int32 errorCode = 1;
inline void LogoutResponse::clear_errorcode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.errorcode_ = 0;
}
inline ::int32_t LogoutResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:LogoutResponse.errorCode)
  return _internal_errorcode();
}
inline void LogoutResponse::set_errorcode(::int32_t value) {
  _internal_set_errorcode(value);
  // @@protoc_insertion_point(field_set:LogoutResponse.errorCode)
}
inline ::int32_t LogoutResponse::_internal_errorcode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.errorcode_;
}
inline void LogoutResponse::_internal_set_errorcode(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.errorcode_ = value;
}

// -------------------------------------------------------------------

// PerformanceTestReq

// int64 someId = 1;
inline void PerformanceTestReq::clear_someid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.someid_ = ::int64_t{0};
}
inline ::int64_t PerformanceTestReq::someid() const {
  // @@protoc_insertion_point(field_get:PerformanceTestReq.someId)
  return _internal_someid();
}
inline void PerformanceTestReq::set_someid(::int64_t value) {
  _internal_set_someid(value);
  // @@protoc_insertion_point(field_set:PerformanceTestReq.someId)
}
inline ::int64_t PerformanceTestReq::_internal_someid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.someid_;
}
inline void PerformanceTestReq::_internal_set_someid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.someid_ = value;
}

// string someBody = 2;
inline void PerformanceTestReq::clear_somebody() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.somebody_.ClearToEmpty();
}
inline const std::string& PerformanceTestReq::somebody() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PerformanceTestReq.someBody)
  return _internal_somebody();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PerformanceTestReq::set_somebody(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.somebody_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PerformanceTestReq.someBody)
}
inline std::string* PerformanceTestReq::mutable_somebody() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_somebody();
  // @@protoc_insertion_point(field_mutable:PerformanceTestReq.someBody)
  return _s;
}
inline const std::string& PerformanceTestReq::_internal_somebody() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.somebody_.Get();
}
inline void PerformanceTestReq::_internal_set_somebody(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.somebody_.Set(value, GetArena());
}
inline std::string* PerformanceTestReq::_internal_mutable_somebody() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.somebody_.Mutable( GetArena());
}
inline std::string* PerformanceTestReq::release_somebody() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:PerformanceTestReq.someBody)
  return _impl_.somebody_.Release();
}
inline void PerformanceTestReq::set_allocated_somebody(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.somebody_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.somebody_.IsDefault()) {
          _impl_.somebody_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PerformanceTestReq.someBody)
}

// -------------------------------------------------------------------

// PerformanceTestRes

// int64 someId = 1;
inline void PerformanceTestRes::clear_someid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.someid_ = ::int64_t{0};
}
inline ::int64_t PerformanceTestRes::someid() const {
  // @@protoc_insertion_point(field_get:PerformanceTestRes.someId)
  return _internal_someid();
}
inline void PerformanceTestRes::set_someid(::int64_t value) {
  _internal_set_someid(value);
  // @@protoc_insertion_point(field_set:PerformanceTestRes.someId)
}
inline ::int64_t PerformanceTestRes::_internal_someid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.someid_;
}
inline void PerformanceTestRes::_internal_set_someid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.someid_ = value;
}

// string resBody = 2;
inline void PerformanceTestRes::clear_resbody() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resbody_.ClearToEmpty();
}
inline const std::string& PerformanceTestRes::resbody() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PerformanceTestRes.resBody)
  return _internal_resbody();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PerformanceTestRes::set_resbody(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resbody_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:PerformanceTestRes.resBody)
}
inline std::string* PerformanceTestRes::mutable_resbody() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resbody();
  // @@protoc_insertion_point(field_mutable:PerformanceTestRes.resBody)
  return _s;
}
inline const std::string& PerformanceTestRes::_internal_resbody() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resbody_.Get();
}
inline void PerformanceTestRes::_internal_set_resbody(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resbody_.Set(value, GetArena());
}
inline std::string* PerformanceTestRes::_internal_mutable_resbody() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.resbody_.Mutable( GetArena());
}
inline std::string* PerformanceTestRes::release_resbody() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:PerformanceTestRes.resBody)
  return _impl_.resbody_.Release();
}
inline void PerformanceTestRes::set_allocated_resbody(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resbody_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resbody_.IsDefault()) {
          _impl_.resbody_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PerformanceTestRes.resBody)
}

// int64 someIdAdd = 3;
inline void PerformanceTestRes::clear_someidadd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.someidadd_ = ::int64_t{0};
}
inline ::int64_t PerformanceTestRes::someidadd() const {
  // @@protoc_insertion_point(field_get:PerformanceTestRes.someIdAdd)
  return _internal_someidadd();
}
inline void PerformanceTestRes::set_someidadd(::int64_t value) {
  _internal_set_someidadd(value);
  // @@protoc_insertion_point(field_set:PerformanceTestRes.someIdAdd)
}
inline ::int64_t PerformanceTestRes::_internal_someidadd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.someidadd_;
}
inline void PerformanceTestRes::_internal_set_someidadd(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.someidadd_ = value;
}

// -------------------------------------------------------------------

// EchoReq

// string requestBody = 1;
inline void EchoReq::clear_requestbody() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.requestbody_.ClearToEmpty();
}
inline const std::string& EchoReq::requestbody() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:EchoReq.requestBody)
  return _internal_requestbody();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EchoReq::set_requestbody(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.requestbody_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:EchoReq.requestBody)
}
inline std::string* EchoReq::mutable_requestbody() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_requestbody();
  // @@protoc_insertion_point(field_mutable:EchoReq.requestBody)
  return _s;
}
inline const std::string& EchoReq::_internal_requestbody() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.requestbody_.Get();
}
inline void EchoReq::_internal_set_requestbody(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.requestbody_.Set(value, GetArena());
}
inline std::string* EchoReq::_internal_mutable_requestbody() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.requestbody_.Mutable( GetArena());
}
inline std::string* EchoReq::release_requestbody() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:EchoReq.requestBody)
  return _impl_.requestbody_.Release();
}
inline void EchoReq::set_allocated_requestbody(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.requestbody_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.requestbody_.IsDefault()) {
          _impl_.requestbody_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:EchoReq.requestBody)
}

// int64 someId = 2;
inline void EchoReq::clear_someid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.someid_ = ::int64_t{0};
}
inline ::int64_t EchoReq::someid() const {
  // @@protoc_insertion_point(field_get:EchoReq.someId)
  return _internal_someid();
}
inline void EchoReq::set_someid(::int64_t value) {
  _internal_set_someid(value);
  // @@protoc_insertion_point(field_set:EchoReq.someId)
}
inline ::int64_t EchoReq::_internal_someid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.someid_;
}
inline void EchoReq::_internal_set_someid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.someid_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ProtoTask_2eproto_2epb_2eh
